{
    "env": {
        "browser": true,
        "es2021": true,
        "jest": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:import/recommended",
        "plugin:@typescript-eslint/recommended"
        //    "prettier"
    ],
    "overrides": [
    ],
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".ts",
                ".tsx"
            ]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true,
                // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`

                // Choose from one of the "project" configs below or omit to use <root>/tsconfig.json by default

                // use <root>/path/to/folder/tsconfig.json
                "project": [
                    "path/to/folder",
                    "packages/*/tsconfig.json",
                    "packages/module-a/tsconfig.json",
                    "packages/module-b/tsconfig.json",
                    "packages/*/tsconfig.json",
                    "other-packages/*/tsconfig.json"
                ]
            }
        }
    },
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "react",
        "react-hooks",
        "prettier",
        "import",
        "@typescript-eslint"
    ],
    "rules": {
        "import/extensions": [
            "error",
            "never",
            {
                "svg": "always",
                "css": "always",
                "json": "always"
            }
        ],
        "import/order": [
            "error",
            {
                "groups": [
                    "external",
                    "internal",
                    [
                        "parent",
                        "sibling",
                        "index"
                    ]
                ],
                "distinctGroup": false,
                "pathGroups": [
                    {
                        "pattern": "react",
                        "group": "external",
                        "position": "before"
                    },
                    {
                        "pattern": "src/generated/",
                        "group": "internal",
                        "position": "before"
                    },
                    {
                        "pattern": "src//*",
                        "group": "parent",
                        "position": "before"
                    },
                    {
                        "pattern": "./",
                        "group": "sibling",
                        "position": "after"
                    },
                    {
                        "pattern": "",
                        "group": "external"
                    }
                ],
                "newlines-between": "always",
                "alphabetize": {
                    "order": "asc",
                    "caseInsensitive": true
                }
            }
        ],
        "import/default": 0,
        "react/prop-types": 0,
        "react/self-closing-comp": [
            "error",
            {
                "component": true,
                "html": true
            }
        ],
        "react/jsx-tag-spacing": [
            "error",
            {
                "beforeSelfClosing": "always"
            }
        ],
        "no-restricted-exports": [
            "error",
            {
                "restrictDefaultExports": {
                    "direct": true
                }
            }
        ],
        "react/react-in-jsx-scope": "off",
        "camelcase": "error",
        "spaced-comment": "error",
        "quotes": [
            "error",
            "single"
        ],
        "no-duplicate-imports": "error",
        "no-unused-vars": "off",
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports",
                "disallowTypeAnnotations": true,
                "fixStyle": "inline-type-imports"
            }
        ],
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "varsIgnorePattern": "_",
                "argsIgnorePattern": "_",
                "ignoreRestSiblings": true
            }
        ],
        "react/jsx-sort-props": "error"
    }
}
